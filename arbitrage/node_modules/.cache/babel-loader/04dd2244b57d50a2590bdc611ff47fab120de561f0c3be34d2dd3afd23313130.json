{"ast":null,"code":"var _jsxFileName = \"/home/yagiz/projects/arbitrage/arbitrage/src/utils/walletProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nİMPORT;\nconst WalletContext = /*#__PURE__*/createContext();\nexport default WalletContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [walletAcc, setWalletAcc] = useState(null);\n  const requestAccount = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAcc(accounts[0]);\n      } catch (error) {\n        alert(\"Could not connect to the Metamask account\");\n      }\n    } else {\n      alert(\"Metamask is not detected\");\n    }\n  };\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n    } else {\n      alert(\"Metamask is not detected\");\n    }\n  };\n  contextData = {\n    connectWallet: connectWallet,\n    walletAcc: walletAcc\n  };\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"+3ACMc6LrpBaT+RIxJZcPA0SEnw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","İMPORT","WalletContext","AuthProvider","_ref","_s","children","walletAcc","setWalletAcc","requestAccount","window","ethereum","accounts","request","method","error","alert","connectWallet","provider","ethers","providers","Web3Provider","signer","getSigner","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yagiz/projects/arbitrage/arbitrage/src/utils/walletProvider.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nİMPORT \nconst WalletContext = createContext();\n\nexport default WalletContext;\n\nexport const AuthProvider = ({ children }) => {\n\n    let [walletAcc, setWalletAcc] = useState(null);\n\n    const requestAccount = async () => {\n        if (window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({\n                    method: \"eth_requestAccounts\"\n                });\n                setWalletAcc(accounts[0]);\n            }\n            catch (error) {\n                alert(\"Could not connect to the Metamask account\");\n            }\n        }\n        else {\n            alert(\"Metamask is not detected\");\n        }\n    }\n\n    const connectWallet = async () => {\n        if (typeof window.ethereum !== \"undefined\") {\n            await requestAccount();\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n        }\n        else {\n            alert(\"Metamask is not detected\");\n        }\n    }\n\n    contextData = {\n        connectWallet: connectWallet,\n        walletAcc: walletAcc\n    }\n    \n    return (\n        <WalletContext.Provider value={contextData}>\n            {children}\n        </WalletContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3DC,MAAM;AACN,MAAMC,aAAa,gBAAGN,aAAa,EAAE;AAErC,eAAeM,aAAa;AAE5B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAErC,IAAI,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACjB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAC3CC,MAAM,EAAE;QACZ,CAAC,CAAC;QACFN,YAAY,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC7B,CAAC,CACD,OAAOG,KAAK,EAAE;QACVC,KAAK,CAAC,2CAA2C,CAAC;MACtD;IACJ,CAAC,MACI;MACDA,KAAK,CAAC,0BAA0B,CAAC;IACrC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,OAAOP,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MACxC,MAAMF,cAAc,EAAE;MACtB,MAAMS,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMW,MAAM,GAAGJ,QAAQ,CAACK,SAAS,EAAE;IACvC,CAAC,MACI;MACDP,KAAK,CAAC,0BAA0B,CAAC;IACrC;EACJ,CAAC;EAEDQ,WAAW,GAAG;IACVP,aAAa,EAAEA,aAAa;IAC5BV,SAAS,EAAEA;EACf,CAAC;EAED,oBACIP,OAAA,CAACE,aAAa,CAACuB,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAlB,QAAA,EACtCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAEjC,CAAC;AAAAzB,EAAA,CA1CYF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}