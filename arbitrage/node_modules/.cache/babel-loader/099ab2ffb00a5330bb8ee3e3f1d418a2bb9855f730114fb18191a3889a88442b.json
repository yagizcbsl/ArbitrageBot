{"ast":null,"code":"var _jsxFileName = \"/home/yagiz/projects/arbitrage/arbitrage/src/pages/connectionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useContext } from 'react';\nimport WalletContext from '../utils/walletProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConnectionPage = () => {\n  _s();\n  let {\n    connectWallet,\n    walletAcc,\n    provider,\n    signer\n  } = useContext(WalletContext);\n  let [balance, setBalance] = useState(null);\n  const getBalance = async () => {\n    balancee = await provider.getBalance(\"ethers.eth\");\n    balanceEth = ethers.utils.formatEther(balance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connectWallet(),\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Wallet Address: \", walletAcc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(ConnectionPage, \"igoc6ollDlRMQd2Dm7KUggsKni0=\");\n_c = ConnectionPage;\nexport default ConnectionPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionPage\");","map":{"version":3,"names":["React","useState","useContext","WalletContext","jsxDEV","_jsxDEV","ConnectionPage","_s","connectWallet","walletAcc","provider","signer","balance","setBalance","getBalance","balancee","balanceEth","ethers","utils","formatEther","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yagiz/projects/arbitrage/arbitrage/src/pages/connectionPage.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useContext } from 'react';\nimport WalletContext from '../utils/walletProvider';\n\nexport const ConnectionPage = () => {\n\n    let {connectWallet, walletAcc, provider , signer} = useContext(WalletContext);\n\n    let [balance,setBalance] = useState(null);\n\n    const getBalance = async () => {\n        balancee = await provider.getBalance(\"ethers.eth\");\n        balanceEth = ethers.utils.formatEther(balance);\n\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <button onClick={() => connectWallet()}>Connect Wallet</button>\n                <h5>Wallet Address: {walletAcc}</h5>\n                \n            </header>\n        </div>\n    );\n}\n\nexport default ConnectionPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhC,IAAI;IAACC,aAAa;IAAEC,SAAS;IAAEC,QAAQ;IAAGC;EAAM,CAAC,GAAGT,UAAU,CAACC,aAAa,CAAC;EAE7E,IAAI,CAACS,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEzC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BC,QAAQ,GAAG,MAAML,QAAQ,CAACI,UAAU,CAAC,YAAY,CAAC;IAClDE,UAAU,GAAGC,MAAM,CAACC,KAAK,CAACC,WAAW,CAACP,OAAO,CAAC;EAElD,CAAC;EAED,oBACIP,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBhB,OAAA;MAAQe,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC1BhB,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAMd,aAAa,EAAG;QAAAa,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC/DrB,OAAA;QAAAgB,QAAA,GAAI,kBAAgB,EAACZ,SAAS;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAAnB,EAAA,CArBYD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAuB3B,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}