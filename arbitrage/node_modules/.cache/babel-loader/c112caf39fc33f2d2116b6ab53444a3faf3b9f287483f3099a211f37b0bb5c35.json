{"ast":null,"code":"var _jsxFileName = \"/home/yagiz/projects/arbitrage/arbitrage/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [walletAcc, setWalletAcc] = useState([]);\n  const requestAccount = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        console.log(accounts);\n        setWalletAcc(accounts);\n      } catch (error) {\n        alert(\"Could not connect to the Metamask account\");\n      }\n    } else {\n      alert(\"Metamask is not detected\");\n    }\n  };\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => requestAccount(),\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Wallet Address: \", walletAcc[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PpNqkxOLfomnwtK7w3q1yoNOzcI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","walletAcc","setWalletAcc","requestAccount","window","ethereum","accounts","request","method","console","log","error","alert","connectWallet","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yagiz/projects/arbitrage/arbitrage/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nfunction App() {\n  let [walletAcc, setWalletAcc] = useState([]);\n  const requestAccount = async () => {\n    if (window.ethereum){\n      try{\n        const accounts = await window.ethereum.request({\n          method:\"eth_requestAccounts\"\n        });\n        console.log(accounts);\n        setWalletAcc(accounts);\n      }\n      catch(error){\n        alert(\"Could not connect to the Metamask account\");\n      }\n    }\n    else{\n      alert(\"Metamask is not detected\");\n    }\n  }\n\n  const connectWallet = async () => {\n    if(typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n\n      \n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={()=>requestAccount()}\n        >Connect Wallet</button>\n        <h5>Wallet Address: {walletAcc[0]}</h5>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIC,MAAM,CAACC,QAAQ,EAAC;MAClB,IAAG;QACD,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAC7CC,MAAM,EAAC;QACT,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrBJ,YAAY,CAACI,QAAQ,CAAC;MACxB,CAAC,CACD,OAAMK,KAAK,EAAC;QACVC,KAAK,CAAC,2CAA2C,CAAC;MACpD;IACF,CAAC,MACG;MACFA,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAG,OAAOT,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MACzC,MAAMF,cAAc,EAAE;IAGxB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BjB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAIb,cAAc,EAAG;QAAAY,QAAA,EACrC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACxBtB,OAAA;QAAAiB,QAAA,GAAI,kBAAgB,EAACd,SAAS,CAAC,CAAC,CAAC;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACpB,EAAA,CArCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}