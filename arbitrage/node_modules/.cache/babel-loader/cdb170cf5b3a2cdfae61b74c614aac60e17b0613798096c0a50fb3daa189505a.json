{"ast":null,"code":"var _jsxFileName = \"/home/yagiz/projects/arbitrage/arbitrage/src/pages/connectionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport WalletContext from \"../utils/walletProvider\";\nimport { Contract, ethers } from \"ethers\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConnectionPage = () => {\n  _s();\n  let {\n    connectWallet,\n    walletAcc,\n    provider,\n    signer,\n    getContract,\n    contracts\n  } = useContext(WalletContext);\n  let [balance, setBalance] = useState(null);\n  let [inputField, setInputField] = useState({\n    address: \"\",\n    abi: \"\"\n  });\n  const tokenA = \"0x82C24eF167484b29195B0ce92b34Ae3d52B4C331\";\n  const tokenB = \"0xa0d9faadae312e37e695cc826b0e3cbbdb197077\";\n  const inputsHandler = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setInputField(prevState => ({\n      ...prevState,\n      [id]: value\n    }));\n  };\n  const getBalance = async () => {\n    let balancee = await provider.getBalance(walletAcc);\n    let balanceEth = ethers.utils.formatEther(balancee);\n    setBalance(balanceEth);\n    console.log(contracts);\n  };\n  const getToken = async contractAddress => {\n    const rawData = \"0xaa6ca808\";\n    const tx = await signer.sendTransaction({\n      data: rawData,\n      to: contractAddress\n    });\n    console.log(\"Transaction hash:\", tx.hash);\n  };\n  let getAmountOut = async (tokenA, amountI) => {\n    let amountIn = 1;\n    let res = await contract.reserve0();\n    let res0 = parseInt(res[\"_hex\"]);\n    let response = await contract.reserve1();\n    let res1 = parseInt(response[\"_hex\"]);\n    let result = res1 * amountIn * 997 / 1000 / (res0 + amountIn * 997 / 1000);\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connectWallet(),\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Wallet Address: \", walletAcc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getBalance(),\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Balance: \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getToken(tokenA),\n        children: \"getToken - A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getToken(tokenB),\n        children: \"getToken - B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"inputTag\",\n          name: \"address\",\n          id: \"address\",\n          value: inputField.address,\n          onChange: e => inputsHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"ABI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"inputTag\",\n          name: \"abi\",\n          id: \"abi\",\n          value: inputField.abi,\n          onChange: e => inputsHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getContract(inputField.address, inputField.abi),\n          children: \"Add Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contracts: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), contracts.map(contract => {\n        // aa6ca808;\n\n        let swapTokens = async (address, amountIn) => {\n          let res = await getAmountOut();\n          if (res > 1) {\n            let response = await contract.swap(address, 1);\n            console.log(response);\n          }\n        };\n        console.log(contract);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: contract.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              let res = await getAmountOut();\n              console.log(res);\n            },\n            children: \"get amountOut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              let res = await swapTokens(\"0x82C24eF167484b29195B0ce92b34Ae3d52B4C331\", 1);\n              console.log(res);\n            },\n            children: \"SWAP TOKENS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionPage, \"oSC8QhBREBX/ZrlqI9w6r3OUKjg=\");\n_c = ConnectionPage;\nexport default ConnectionPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionPage\");","map":{"version":3,"names":["React","useState","useContext","WalletContext","Contract","ethers","jsxDEV","_jsxDEV","ConnectionPage","_s","connectWallet","walletAcc","provider","signer","getContract","contracts","balance","setBalance","inputField","setInputField","address","abi","tokenA","tokenB","inputsHandler","e","id","value","target","prevState","getBalance","balancee","balanceEth","utils","formatEther","console","log","getToken","contractAddress","rawData","tx","sendTransaction","data","to","hash","getAmountOut","amountI","amountIn","res","contract","reserve0","res0","parseInt","response","reserve1","res1","result","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","name","onChange","map","swapTokens","swap","_c","$RefreshReg$"],"sources":["/home/yagiz/projects/arbitrage/arbitrage/src/pages/connectionPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport WalletContext from \"../utils/walletProvider\";\nimport { Contract, ethers } from \"ethers\";\nimport \"../App.css\";\n\nexport const ConnectionPage = () => {\n  let { connectWallet, walletAcc, provider, signer, getContract, contracts } =\n    useContext(WalletContext);\n\n  let [balance, setBalance] = useState(null);\n\n  let [inputField, setInputField] = useState({\n    address: \"\",\n    abi: \"\",\n  });\n\n  const tokenA = \"0x82C24eF167484b29195B0ce92b34Ae3d52B4C331\";\n  const tokenB = \"0xa0d9faadae312e37e695cc826b0e3cbbdb197077\";\n\n  const inputsHandler = (e) => {\n    const { id, value } = e.target;\n    setInputField((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const getBalance = async () => {\n    let balancee = await provider.getBalance(walletAcc);\n    let balanceEth = ethers.utils.formatEther(balancee);\n    setBalance(balanceEth);\n    console.log(contracts);\n  };\n\n  const getToken = async (contractAddress) => {\n    const rawData = \"0xaa6ca808\";\n    const tx = await signer.sendTransaction({\n      data: rawData,\n      to: contractAddress,\n    });\n    console.log(\"Transaction hash:\", tx.hash);\n  }\n\n  let getAmountOut = async (tokenA,amountI) => {\n    let amountIn = 1;\n    let res = await contract.reserve0();\n    let res0 = parseInt(res[\"_hex\"]);\n    let response = await contract.reserve1();\n    let res1 = parseInt(response[\"_hex\"]);\n    let result =\n      (res1 * amountIn * 997) / 1000 / (res0 + (amountIn * 997) / 1000);\n    return result;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={() => connectWallet()}>Connect Wallet</button>\n        <h5>Wallet Address: {walletAcc}</h5>\n        <button onClick={() => getBalance()}>Get Balance</button>\n        <h5>Balance: {balance} ETH</h5>\n        <button\n          onClick={() => getToken(tokenA)}\n        >\n          getToken - A\n        </button>\n        <button\n          onClick={() => getToken(tokenB)}\n        >\n          getToken - B\n        </button>\n\n        <div>\n          <h2>Add Contract</h2>\n\n          <label>\n            <h4>Address:</h4>\n          </label>\n          <input\n            class=\"inputTag\"\n            name=\"address\"\n            id=\"address\"\n            value={inputField.address}\n            onChange={(e) => inputsHandler(e)}\n          />\n          <label>\n            <h4>ABI:</h4>\n          </label>\n          <input\n            class=\"inputTag\"\n            name=\"abi\"\n            id=\"abi\"\n            value={inputField.abi}\n            onChange={(e) => inputsHandler(e)}\n          />\n          <br />\n          <button\n            onClick={() => getContract(inputField.address, inputField.abi)}\n          >\n            Add Contract\n          </button>\n        </div>\n        \n\n        <h2>Contracts: </h2>\n        {contracts.map((contract) => {\n          \n\n          // aa6ca808;\n\n          let swapTokens = async (address, amountIn) => {\n            let res = await getAmountOut();\n            if (res > 1) {\n              let response = await contract.swap(address, 1);\n              console.log(response);\n            }\n          };\n          console.log(contract);\n          return (\n            <div>\n              <p>{contract.address}</p>\n              <button\n                onClick={async () => {\n                  let res = await getAmountOut();\n                  console.log(res);\n                }}\n              >\n                get amountOut\n              </button>\n\n              <button\n                onClick={async () => {\n                  let res = await swapTokens(\n                    \"0x82C24eF167484b29195B0ce92b34Ae3d52B4C331\",\n                    1\n                  );\n                  console.log(res);\n                }}\n              >\n                SWAP TOKENS\n              </button>\n            </div>\n          );\n        })}\n      </header>\n    </div>\n  );\n};\n\nexport default ConnectionPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}