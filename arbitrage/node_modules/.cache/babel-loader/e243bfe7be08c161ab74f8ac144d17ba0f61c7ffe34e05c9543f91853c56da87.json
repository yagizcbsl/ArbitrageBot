{"ast":null,"code":"var _jsxFileName = \"/home/yagiz/projects/arbitrage/arbitrage/src/pages/connectionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport WalletContext from \"../utils/walletProvider\";\nimport { Contract, ethers } from \"ethers\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConnectionPage = () => {\n  _s();\n  let {\n    connectWallet,\n    walletAcc,\n    provider,\n    signer,\n    getContract,\n    contracts\n  } = useContext(WalletContext);\n  let [balance, setBalance] = useState(null);\n  let [inputField, setInputField] = useState({\n    address: \"\",\n    abi: \"\"\n  });\n  const inputsHandler = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setInputField(prevState => ({\n      ...prevState,\n      [id]: value\n    }));\n  };\n  const getBalance = async () => {\n    let balancee = await provider.getBalance(walletAcc);\n    let balanceEth = ethers.utils.formatEther(balancee);\n    setBalance(balanceEth);\n    console.log(contracts);\n  };\n  const getToken = async () => {\n    // Define the contract address and bytecode\n    const contractAddress = \"0xA0D9FaAdae312E37E695CC826B0e3CBbDb197077\";\n    const bytecode = \"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063aa6ca80814610251578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610d7d565b60405180910390f35b6100f160048036038101906100ec9190610e38565b61031d565b6040516100fe9190610e93565b60405180910390f35b61010f610340565b60405161011c9190610ebd565b60405180910390f35b61013f600480360381019061013a9190610ed8565b61034a565b60405161014c9190610e93565b60405180910390f35b61015d610379565b60405161016a9190610f47565b60405180910390f35b61018d60048036038101906101889190610e38565b610382565b60405161019a9190610e93565b60405180910390f35b6101bd60048036038101906101b89190610f62565b61042c565b6040516101ca9190610ebd565b60405180910390f35b6101db610474565b6040516101e89190610d7d565b60405180910390f35b61020b60048036038101906102069190610e38565b610506565b6040516102189190610e93565b60405180910390f35b61023b60048036038101906102369190610e38565b6105f0565b6040516102489190610e93565b60405180910390f35b610259610613565b005b61027560048036038101906102709190610f8f565b610621565b6040516102829190610ebd565b60405180910390f35b60606003805461029a90610ffe565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690610ffe565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b6000806103286106a8565b90506103358185856106b0565b600191505092915050565b6000600254905090565b6000806103556106a8565b9050610362858285610879565b61036d858585610905565b60019150509392505050565b60006012905090565b60008061038d6106a8565b9050610421818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461041c919061105e565b6106b0565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461048390610ffe565b80601f01602080910402602001604051908101604052809291908181526020018280546104af90610ffe565b80156104fc5780601f106104d1576101008083540402835291602001916104fc565b820191906000526020600020905b8154815290600101906020018083116104df57829003601f168201915b5050505050905090565b6000806105116106a8565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611104565b60405180910390fd5b6105e482868684036106b0565b60019250505092915050565b6000806105fb6106a8565b9050610608818585610905565b600191505092915050565b61061f336103e8610b84565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071690611196565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611228565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161086c9190610ebd565b60405180910390a3505050565b60006108858484610621565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108ff57818110156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611294565b60405180910390fd5b6108fe84848484036106b0565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90611326565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da906113b8565b60405180910390fd5b6109ee838383610ce3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b9061144a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b07919061105e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b6b9190610ebd565b60405180910390a3610b7e848484610ce8565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea906114b6565b60405180910390fd5b610bff60008383610ce3565b8060026000828254610c11919061105e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c66919061105e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ccb9190610ebd565b60405180910390a3610cdf60008383610ce8565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d27578082015181840152602081019050610d0c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d4f82610ced565b610d598185610cf8565b9350610d69818560208601610d09565b610d7281610d33565b840191505092915050565b60006020820190508181036000830152610d978184610d44565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dcf82610da4565b9050919050565b610ddf81610dc4565b8114610dea57600080fd5b50565b600081359050610dfc81610dd6565b92915050565b6000819050919050565b610e1581610e02565b8114610e2057600080fd5b50565b600081359050610e3281610e0c565b92915050565b60008060408385031215610e4f57610e4e610d9f565b5b6000610e5d85828601610ded565b9250506020610e6e85828601610e23565b9150509250929050565b60008115159050919050565b610e8d81610e78565b82525050565b6000602082019050610ea86000830184610e84565b92915050565b610eb781610e02565b82525050565b6000602082019050610ed26000830184610eae565b92915050565b600080600060608486031215610ef157610ef0610d9f565b5b6000610eff86828701610ded565b9350506020610f1086828701610ded565b9250506040610f2186828701610e23565b9150509250925092565b600060ff82169050919050565b610f4181610f2b565b82525050565b6000602082019050610f5c6000830184610f38565b92915050565b600060208284031215610f7857610f77610d9f565b5b6000610f8684828501610ded565b91505092915050565b60008060408385031215610fa657610fa5610d9f565b5b6000610fb485828601610ded565b9250506020610fc585828601610ded565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061101657607f821691505b60208210810361102957611028610fcf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106982610e02565b915061107483610e02565b925082820190508082111561108c5761108b61102f565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006110ee602583610cf8565b91506110f982611092565b604082019050919050565b6000602082019050818103600083015261111d816110e1565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611180602483610cf8565b915061118b82611124565b604082019050919050565b600060208201905081810360008301526111af81611173565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611212602283610cf8565b915061121d826111b6565b604082019050919050565b6000602082019050818103600083015261124181611205565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061127e601d83610cf8565b915061128982611248565b602082019050919050565b600060208201905081810360008301526112ad81611271565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611310602583610cf8565b915061131b826112b4565b604082019050919050565b6000602082019050818103600083015261133f81611303565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113a2602383610cf8565b91506113ad82611346565b604082019050919050565b600060208201905081810360008301526113d181611395565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611434602683610cf8565b915061143f826113d8565b604082019050919050565b6000602082019050818103600083015261146381611427565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006114a0601f83610cf8565b91506114ab8261146a565b602082019050919050565b600060208201905081810360008301526114cf81611493565b905091905056fea2646970667358221220e364850da443edf07b7105d4b1acb21e9d8ee4b73d36d093a63f683db657c3ff64736f6c63430008120033\";\n    const contract = new ethers.Contract(contractAddress, [], signer);\n\n    // Define the raw data you want to send to the contract\n    const rawData = \"0xaa6ca808\";\n\n    // Send the transaction to the contract\n    const tx = await signer.sendTransaction({\n      data: bytecode + rawData,\n      to: contractAddress\n    });\n    console.log(\"Transaction hash:\", tx.hash);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connectWallet(),\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Wallet Address: \", walletAcc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getBalance(),\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Balance: \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getToken()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"inputTag\",\n          name: \"address\",\n          id: \"address\",\n          value: inputField.address,\n          onChange: e => inputsHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"ABI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"inputTag\",\n          name: \"abi\",\n          id: \"abi\",\n          value: inputField.abi,\n          onChange: e => inputsHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getContract(inputField.address, inputField.abi),\n          children: \"Add Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"forms2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"inputTag\",\n          name: \"address\",\n          id: \"address\",\n          value: inputField.address,\n          onChange: e => inputsHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"ABI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"inputTag\",\n          name: \"abi\",\n          id: \"abi\",\n          value: inputField.abi,\n          onChange: e => inputsHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getContract(inputField.address, inputField.abi),\n          children: \"Add Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contracts: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), contracts.map(contract => {\n        let getAmountOut = async () => {\n          let amountIn = 1;\n          let res = await contract.reserve0();\n          let res0 = parseInt(res[\"_hex\"]);\n          let response = await contract.reserve1();\n          let res1 = parseInt(response[\"_hex\"]);\n          let result = res1 * amountIn * 997 / 1000 / (res0 + amountIn * 997 / 1000);\n          return result;\n        };\n\n        // aa6ca808;\n\n        let swapTokens = async (address, amountIn) => {\n          let res = await getAmountOut();\n          if (res > 1) {\n            let response = await contract.swap(address, 1);\n            console.log(response);\n          }\n        };\n        console.log(contract);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: contract.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              let res = await getAmountOut();\n              console.log(res);\n            },\n            children: \"get amountOut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              let res = await swapTokens(\"0x82C24eF167484b29195B0ce92b34Ae3d52B4C331\", 1);\n              console.log(res);\n            },\n            children: \"SWAP TOKENS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionPage, \"oSC8QhBREBX/ZrlqI9w6r3OUKjg=\");\n_c = ConnectionPage;\nexport default ConnectionPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionPage\");","map":{"version":3,"names":["React","useState","useContext","WalletContext","Contract","ethers","jsxDEV","_jsxDEV","ConnectionPage","_s","connectWallet","walletAcc","provider","signer","getContract","contracts","balance","setBalance","inputField","setInputField","address","abi","inputsHandler","e","id","value","target","prevState","getBalance","balancee","balanceEth","utils","formatEther","console","log","getToken","contractAddress","bytecode","contract","rawData","tx","sendTransaction","data","to","hash","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","name","onChange","map","getAmountOut","amountIn","res","reserve0","res0","parseInt","response","reserve1","res1","result","swapTokens","swap","_c","$RefreshReg$"],"sources":["/home/yagiz/projects/arbitrage/arbitrage/src/pages/connectionPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport WalletContext from \"../utils/walletProvider\";\nimport { Contract, ethers } from \"ethers\";\nimport \"../App.css\";\n\nexport const ConnectionPage = () => {\n  let { connectWallet, walletAcc, provider, signer, getContract, contracts } =\n    useContext(WalletContext);\n\n  let [balance, setBalance] = useState(null);\n\n  let [inputField, setInputField] = useState({\n    address: \"\",\n    abi: \"\",\n  });\n\n  const inputsHandler = (e) => {\n    const { id, value } = e.target;\n    setInputField((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const getBalance = async () => {\n    let balancee = await provider.getBalance(walletAcc);\n    let balanceEth = ethers.utils.formatEther(balancee);\n    setBalance(balanceEth);\n    console.log(contracts);\n  };\n\n  const getToken = async () => {\n    // Define the contract address and bytecode\n    const contractAddress = \"0xA0D9FaAdae312E37E695CC826B0e3CBbDb197077\";\n    const bytecode =\n      \"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063aa6ca80814610251578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610d7d565b60405180910390f35b6100f160048036038101906100ec9190610e38565b61031d565b6040516100fe9190610e93565b60405180910390f35b61010f610340565b60405161011c9190610ebd565b60405180910390f35b61013f600480360381019061013a9190610ed8565b61034a565b60405161014c9190610e93565b60405180910390f35b61015d610379565b60405161016a9190610f47565b60405180910390f35b61018d60048036038101906101889190610e38565b610382565b60405161019a9190610e93565b60405180910390f35b6101bd60048036038101906101b89190610f62565b61042c565b6040516101ca9190610ebd565b60405180910390f35b6101db610474565b6040516101e89190610d7d565b60405180910390f35b61020b60048036038101906102069190610e38565b610506565b6040516102189190610e93565b60405180910390f35b61023b60048036038101906102369190610e38565b6105f0565b6040516102489190610e93565b60405180910390f35b610259610613565b005b61027560048036038101906102709190610f8f565b610621565b6040516102829190610ebd565b60405180910390f35b60606003805461029a90610ffe565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690610ffe565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b6000806103286106a8565b90506103358185856106b0565b600191505092915050565b6000600254905090565b6000806103556106a8565b9050610362858285610879565b61036d858585610905565b60019150509392505050565b60006012905090565b60008061038d6106a8565b9050610421818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461041c919061105e565b6106b0565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461048390610ffe565b80601f01602080910402602001604051908101604052809291908181526020018280546104af90610ffe565b80156104fc5780601f106104d1576101008083540402835291602001916104fc565b820191906000526020600020905b8154815290600101906020018083116104df57829003601f168201915b5050505050905090565b6000806105116106a8565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611104565b60405180910390fd5b6105e482868684036106b0565b60019250505092915050565b6000806105fb6106a8565b9050610608818585610905565b600191505092915050565b61061f336103e8610b84565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071690611196565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611228565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161086c9190610ebd565b60405180910390a3505050565b60006108858484610621565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108ff57818110156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611294565b60405180910390fd5b6108fe84848484036106b0565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90611326565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da906113b8565b60405180910390fd5b6109ee838383610ce3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b9061144a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b07919061105e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b6b9190610ebd565b60405180910390a3610b7e848484610ce8565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea906114b6565b60405180910390fd5b610bff60008383610ce3565b8060026000828254610c11919061105e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c66919061105e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ccb9190610ebd565b60405180910390a3610cdf60008383610ce8565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d27578082015181840152602081019050610d0c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d4f82610ced565b610d598185610cf8565b9350610d69818560208601610d09565b610d7281610d33565b840191505092915050565b60006020820190508181036000830152610d978184610d44565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dcf82610da4565b9050919050565b610ddf81610dc4565b8114610dea57600080fd5b50565b600081359050610dfc81610dd6565b92915050565b6000819050919050565b610e1581610e02565b8114610e2057600080fd5b50565b600081359050610e3281610e0c565b92915050565b60008060408385031215610e4f57610e4e610d9f565b5b6000610e5d85828601610ded565b9250506020610e6e85828601610e23565b9150509250929050565b60008115159050919050565b610e8d81610e78565b82525050565b6000602082019050610ea86000830184610e84565b92915050565b610eb781610e02565b82525050565b6000602082019050610ed26000830184610eae565b92915050565b600080600060608486031215610ef157610ef0610d9f565b5b6000610eff86828701610ded565b9350506020610f1086828701610ded565b9250506040610f2186828701610e23565b9150509250925092565b600060ff82169050919050565b610f4181610f2b565b82525050565b6000602082019050610f5c6000830184610f38565b92915050565b600060208284031215610f7857610f77610d9f565b5b6000610f8684828501610ded565b91505092915050565b60008060408385031215610fa657610fa5610d9f565b5b6000610fb485828601610ded565b9250506020610fc585828601610ded565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061101657607f821691505b60208210810361102957611028610fcf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106982610e02565b915061107483610e02565b925082820190508082111561108c5761108b61102f565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006110ee602583610cf8565b91506110f982611092565b604082019050919050565b6000602082019050818103600083015261111d816110e1565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611180602483610cf8565b915061118b82611124565b604082019050919050565b600060208201905081810360008301526111af81611173565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611212602283610cf8565b915061121d826111b6565b604082019050919050565b6000602082019050818103600083015261124181611205565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061127e601d83610cf8565b915061128982611248565b602082019050919050565b600060208201905081810360008301526112ad81611271565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611310602583610cf8565b915061131b826112b4565b604082019050919050565b6000602082019050818103600083015261133f81611303565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113a2602383610cf8565b91506113ad82611346565b604082019050919050565b600060208201905081810360008301526113d181611395565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611434602683610cf8565b915061143f826113d8565b604082019050919050565b6000602082019050818103600083015261146381611427565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006114a0601f83610cf8565b91506114ab8261146a565b602082019050919050565b600060208201905081810360008301526114cf81611493565b905091905056fea2646970667358221220e364850da443edf07b7105d4b1acb21e9d8ee4b73d36d093a63f683db657c3ff64736f6c63430008120033\";\n\n    const contract = new ethers.Contract(contractAddress, [], signer);\n\n    // Define the raw data you want to send to the contract\n    const rawData = \"0xaa6ca808\";\n\n    // Send the transaction to the contract\n    const tx = await signer.sendTransaction({\n      data: bytecode + rawData,\n      to: contractAddress,\n    });\n    console.log(\"Transaction hash:\", tx.hash);\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={() => connectWallet()}>Connect Wallet</button>\n        <h5>Wallet Address: {walletAcc}</h5>\n        <button onClick={() => getBalance()}>Get Balance</button>\n        <h5>Balance: {balance} ETH</h5>\n        <button onClick={() => getToken()}></button>\n        <div class=\"forms\">\n          <h2>Add Contract</h2>\n\n          <label>\n            <h4>Address:</h4>\n          </label>\n          <input\n            class=\"inputTag\"\n            name=\"address\"\n            id=\"address\"\n            value={inputField.address}\n            onChange={(e) => inputsHandler(e)}\n          />\n          <label>\n            <h4>ABI:</h4>\n          </label>\n          <input\n            class=\"inputTag\"\n            name=\"abi\"\n            id=\"abi\"\n            value={inputField.abi}\n            onChange={(e) => inputsHandler(e)}\n          />\n          <br />\n          <button\n            onClick={() => getContract(inputField.address, inputField.abi)}\n          >\n            Add Contract\n          </button>\n        </div>\n        <div class=\"forms2\">\n          <h2>Add Contract</h2>\n\n          <label>\n            <h4>Address:</h4>\n          </label>\n          <input\n            class=\"inputTag\"\n            name=\"address\"\n            id=\"address\"\n            value={inputField.address}\n            onChange={(e) => inputsHandler(e)}\n          />\n          <label>\n            <h4>ABI:</h4>\n          </label>\n          <input\n            class=\"inputTag\"\n            name=\"abi\"\n            id=\"abi\"\n            value={inputField.abi}\n            onChange={(e) => inputsHandler(e)}\n          />\n          <br />\n          <button\n            onClick={() => getContract(inputField.address, inputField.abi)}\n          >\n            Add Contract\n          </button>\n        </div>\n\n        <h2>Contracts: </h2>\n        {contracts.map((contract) => {\n          let getAmountOut = async () => {\n            let amountIn = 1;\n            let res = await contract.reserve0();\n            let res0 = parseInt(res[\"_hex\"]);\n            let response = await contract.reserve1();\n            let res1 = parseInt(response[\"_hex\"]);\n            let result =\n              (res1 * amountIn * 997) / 1000 / (res0 + (amountIn * 997) / 1000);\n            return result;\n          };\n\n          // aa6ca808;\n\n          let swapTokens = async (address, amountIn) => {\n            let res = await getAmountOut();\n            if (res > 1) {\n              let response = await contract.swap(address, 1);\n              console.log(response);\n            }\n          };\n          console.log(contract);\n          return (\n            <div>\n              <p>{contract.address}</p>\n              <button\n                onClick={async () => {\n                  let res = await getAmountOut();\n                  console.log(res);\n                }}\n              >get amountOut</button>\n\n              <button\n                onClick={async () => {\n                  let res = await swapTokens(\n                    \"0x82C24eF167484b29195B0ce92b34Ae3d52B4C331\",\n                    1\n                  );\n                  console.log(res);\n                }}\n              >\n                SWAP TOKENS\n              </button>\n            </div>\n          );\n        })}\n      </header>\n    </div>\n  );\n};\n\nexport default ConnectionPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}